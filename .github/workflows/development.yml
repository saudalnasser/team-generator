name: Development

on:
  pull_request:
    types: ['opened', 'edited', 'synchronize', 'reopened']

  workflow_call:

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest

    steps:
      - name: '☁️ checkout repository'
        uses: actions/checkout@v3

      - name: '🔧 setup node'
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: '📦 cache node_modules'
        id: node-modules-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        name: '📦 install dependencies'
        uses: npm run clean && npm install

      - name: '🔍 run tests'
        run: npm run test:headless --if-present

  lint:
    name: Code Standards
    runs-on: ubuntu-latest

    steps:
      - name: '☁️ checkout repository'
        uses: actions/checkout@v3

      - name: '🔧 setup node'
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: '📦 cache node_modules'
        id: node-modules-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        name: '📦 install dependencies'
        uses: npm run clean && npm install

      - name: '🔍 lint code'
        run: npm run lint --if-present
